"use client";

import Header from "@/components/ui/header";
import Footer from "@/components/ui/footer";
import { useState } from "react";
import axios from "axios";
import { FaPaperPlane } from "react-icons/fa";

const Home = () => {
  const [messages, setMessages] = useState([]);
  const [input, setInput] = useState("");

  const weatherApiKey = "539b3381223bfa7da1ac2c0aab7637d2"; // –ö–ª—é—á –¥–ª—è –ø–æ–≥–æ–¥–∏
  const newsApiKey = "e90b380c0ea644599417b336e6bec16e"; // –ö–ª—é—á –¥–ª—è –Ω–æ–≤–∏–Ω

  const handleSendMessage = async () => {
    if (input.trim()) {
      setMessages((prevMessages) => [
        ...prevMessages,
        { text: input, sender: "user" }
      ]);

      let botResponse = "";

      switch (true) {
        case input.toLowerCase().startsWith("–ø–µ—Ä–µ–∫–ª–∞–¥"):
          botResponse = await handleTranslation(input);
          break;
        case input.toLowerCase() === "–ø—Ä–∏–≤—ñ—Ç":
          botResponse = "üëã –ü—Ä–∏–≤—ñ—Ç! –Ø–∫ —è –º–æ–∂—É –¥–æ–ø–æ–º–æ–≥—Ç–∏ –≤–∞–º —Å—å–æ–≥–æ–¥–Ω—ñ?";
          break;
        case input.toLowerCase() === "—è–∫ —Å–ø—Ä–∞–≤–∏?":
          botResponse = "üòä –£ –º–µ–Ω–µ –≤—Å–µ –¥–æ–±—Ä–µ, –¥—è–∫—É—é! –ê —É –≤–∞—Å?";
          break;
        case input.toLowerCase() === "–¥–æ–ø–æ–º–æ–≥–∞":
          botResponse = "üÜò –Ø –º–æ–∂—É –¥–æ–ø–æ–º–æ–≥—Ç–∏ –∑ –Ω–∞—Å—Ç—É–ø–Ω–∏–º–∏ –∫–æ–º–∞–Ω–¥–∞–º–∏:\n1. '–ø—Ä–∏–≤—ñ—Ç'\n2. '—è–∫ —Å–ø—Ä–∞–≤–∏?'\n3. '–ø–æ–≥–æ–¥–∞ [–º—ñ—Å—Ç–æ]'\n4. '–Ω–æ–≤–∏–Ω–∏'\n5. '–ø–µ—Ä–µ–∫–ª–∞–¥ [–º–æ–≤–∞] [—Ç–µ–∫—Å—Ç]'\n6. '—ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è'\n7. '–º–µ—Ç–∞'\n8. '–ø–æ—Å–ª—É–≥–∏'\n9. '–∫–æ–Ω—Ç–∞–∫—Ç–∏'\nüîç –ü—Ä–æ—Å—Ç–æ –≤–≤–µ–¥—ñ—Ç—å –æ–¥–Ω—É –∑ —Ü–∏—Ö –∫–æ–º–∞–Ω–¥!";
          break;
        case input.toLowerCase().startsWith("–ø–æ–≥–æ–¥–∞"):
          const city = input.split(" ")[1];
          if (!city) {
            botResponse = "üèôÔ∏è –ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –º—ñ—Å—Ç–æ –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –ø–æ–≥–æ–¥–∏, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥, '–ø–æ–≥–æ–¥–∞ –ö–∏—ó–≤'.";
          } else {
            botResponse = await fetchWeather(city);
          }
          break;
        case input.toLowerCase() === "–Ω–æ–≤–∏–Ω–∏":
          botResponse = await fetchNews();
          break;
        case input.toLowerCase() === "—ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è":
          botResponse = "üìã –ú–∏ - –∫–æ–º–∞–Ω–¥–∞, —â–æ –ø—Ä–∞–≥–Ω–µ –¥–æ–ø–æ–º–æ–≥—Ç–∏ –≤–∞–º –∑ —É—Å—ñ–º–∞ –≤–∞—à–∏–º–∏ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è–º–∏ —Ç–∞ –ø–æ—Ç—Ä–µ–±–∞–º–∏.";
          break;
        case input.toLowerCase() === "–º–µ—Ç–∞":
          botResponse = "üéØ –ù–∞—à–∞ –º–µ—Ç–∞ - –∑–∞–±–µ–∑–ø–µ—á–∏—Ç–∏ –Ω–∞–π–∫—Ä–∞—â–∏–π —Å–µ—Ä–≤—ñ—Å —Ç–∞ –ø—ñ–¥—Ç—Ä–∏–º–∫—É –¥–ª—è –Ω–∞—à–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤.";
          break;
        case input.toLowerCase() === "–ø–æ—Å–ª—É–≥–∏":
          botResponse = "üõ†Ô∏è –ú–∏ –ø—Ä–æ–ø–æ–Ω—É—î–º–æ —Ä—ñ–∑–Ω–æ–º–∞–Ω—ñ—Ç–Ω—ñ –ø–æ—Å–ª—É–≥–∏, –≤–∫–ª—é—á–∞—é—á–∏ –ø–µ—Ä–µ–∫–ª–∞–¥, —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –ø–æ–≥–æ–¥—É, –∞ —Ç–∞–∫–æ–∂ –ø—ñ–¥—Ç—Ä–∏–º–∫—É –ø–æ —Ä—ñ–∑–Ω–∏–º –∑–∞–ø–∏—Ç–∞–Ω–Ω—è–º.";
          break;
        case input.toLowerCase() === "–∫–æ–Ω—Ç–∞–∫—Ç–∏":
          botResponse = "üìû –ó–≤'—è–∂—ñ—Ç—å—Å—è –∑ –Ω–∞–º–∏ –∑–∞ –µ–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ—é –ø–æ—à—Ç–æ—é: support@example.com";
          break;
        case input.toLowerCase() === "—Ñ—ñ–¥–±–µ–∫":
          botResponse = "‚úçÔ∏è –ú–∏ —Ü—ñ–Ω—É—î–º–æ –≤–∞—à—É –¥—É–º–∫—É! –í–∏ –º–æ–∂–µ—Ç–µ –∑–∞–ª–∏—à–∏—Ç–∏ –≤—ñ–¥–≥—É–∫ –Ω–∞ –Ω–∞—à–æ–º—É —Å–∞–π—Ç—ñ.";
          break;
        default:
          botResponse = "‚ùì –í–∏–±–∞—á—Ç–µ, —è –Ω–µ —Ä–æ–∑—É–º—ñ—é —Ü—é –∫–æ–º–∞–Ω–¥—É. –í–≤–µ–¥—ñ—Ç—å '–¥–æ–ø–æ–º–æ–≥–∞', —â–æ–± –ø–æ–±–∞—á–∏—Ç–∏ –¥–æ—Å—Ç—É–ø–Ω—ñ –∫–æ–º–∞–Ω–¥–∏.";
      }

      setMessages((prevMessages) => [
        ...prevMessages,
        { text: botResponse, sender: "bot" }
      ]);
      setInput("");
    }
  };

  const fetchWeather = async (city) => {
    const url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${weatherApiKey}&units=metric`;

    try {
      const response = await axios.get(url);
      const { main, weather } = response.data;
      return `‚òÄÔ∏è –ü–æ–≥–æ–¥–∞ –≤ –º—ñ—Å—Ç—ñ ${city}: ${main.temp}¬∞C, ${weather[0].description}.`;
    } catch (error) {
      return "‚ùå –ù–∞ –∂–∞–ª—å, —è –Ω–µ –∑–º—ñ–≥ –∑–Ω–∞–π—Ç–∏ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –ø–æ–≥–æ–¥—É –¥–ª—è —Ü—å–æ–≥–æ –º—ñ—Å—Ç–∞.";
    }
  };

  const fetchNews = async () => {
    const url = `https://newsapi.org/v2/top-headlines?country=ua&apiKey=${newsApiKey}`;

    try {
      const response = await axios.get(url);
      const articles = response.data.articles.slice(0, 5);
      const newsMessages = articles.map(article => `üì∞ ${article.title}\nüîó [–î–µ—Ç–∞–ª—ñ](${article.url})`).join("\n\n");
      return newsMessages || "‚ùå –ù–∞—Ä–∞–∑—ñ –Ω–µ–º–∞—î –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –Ω–æ–≤–∏–Ω.";
    } catch (error) {
      return "‚ùå –ù–∞ –∂–∞–ª—å, —Å—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –Ω–æ–≤–∏–Ω.";
    }
  };

  const handleTranslation = async (input) => {
    const parts = input.split(" ");
    if (parts.length < 3) {
      return "üìù –ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –∫–æ–º–∞–Ω–¥—É —É —Ñ–æ—Ä–º–∞—Ç—ñ '–ø–µ—Ä–µ–∫–ª–∞–¥ [–º–æ–≤–∞] [—Ç–µ–∫—Å—Ç]'.";
    }

    const targetLang = parts[1];
    const textToTranslate = parts.slice(2).join(" ");

    try {
      const response = await axios.post('https://libretranslate.com/translate', {
        q: textToTranslate,
        source: "auto",
        target: targetLang,
        format: "text"
      });

      return `üî§ –ü–µ—Ä–µ–∫–ª–∞–¥: ${response.data.translatedText}`;
    } catch (error) {
      return "‚ùå –ù–∞ –∂–∞–ª—å, —Å—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å –ø–µ—Ä–µ–∫–ª–∞–¥—É. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.";
    }
  };

  return (
    <>
      <Header />
      <div className="flex flex-col items-center justify-center min-h-screen bg-gradient-to-br from-blue-200 to-purple-200 pt-5">
        <div className="w-full max-w-4xl p-6 bg-white rounded-lg shadow-xl">
          <div className="text-center mb-8">
            <h1 className="text-6xl font-bold text-gray-900 mb-2 animate-bounce">ü§ñ –ß–∞—Ç-–±–æ—Ç</h1>
            <p className="text-2xl text-gray-700">–ü–∏—Ç–∞–π—Ç–µ, —ñ —è –¥–æ–ø–æ–º–æ–∂—É –≤–∞–º! üåü</p>
          </div>
          <div className="border rounded-lg h-96 overflow-y-auto p-4 bg-gray-100 mb-4">
            {messages.map((message, index) => (
              <div
                key={index}
                className={`mb-2 ${
                  message.sender === "user" ? "text-right" : "text-left"
                }`}
              >
                <div
                  className={`inline-block p-2 rounded-lg transform transition-transform duration-300 ${
                    message.sender === "user"
                      ? "bg-blue-500 text-white animate-pulse"
                      : "bg-gray-300 text-black animate-fadeIn animate-slideIn"
                  }`}
                >
                  {message.text.split('\n').map((line, idx) => (
                    <div key={idx}>{line}</div>
                  ))}
                </div>
              </div>
            ))}
          </div>
          <div className="flex">
            <input
              type="text"
              value={input}
              onChange={(e) => setInput(e.target.value)}
              className="flex-grow border rounded-lg p-2 focus:outline-none focus:ring-2 focus:ring-blue-500"
              placeholder="–ù–∞–ø–∏—à—ñ—Ç—å –≤–∞—à–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è..."
            />
            <button
              onClick={handleSendMessage}
              className="ml-2 bg-blue-600 text-white font-bold rounded-lg px-4 hover:bg-blue-700 transition flex items-center transform hover:scale-105"
            >
              <FaPaperPlane className="mr-1" />
              –í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏
            </button>
          </div>
        </div>
      </div>
      <Footer />
      <style jsx>{`
        @keyframes fadeIn {
          from {
            opacity: 0;
          }
          to {
            opacity: 1;
          }
        }

        @keyframes slideIn {
          from {
            transform: translateY(20px);
            opacity: 0;
          }
          to {
            transform: translateY(0);
            opacity: 1;
          }
        }

        @keyframes pulse {
          0% {
            transform: scale(1);
          }
          50% {
            transform: scale(1.05);
          }
          100% {
            transform: scale(1);
          }
        }

        .animate-fadeIn {
          animation: fadeIn 0.5s ease-in;
        }

        .animate-slideIn {
          animation: slideIn 0.5s ease-in;
        }

        .animate-pulse {
          animation: pulse 1s infinite;
        }
      `}</style>
    </>
  );
};

export default Home;
